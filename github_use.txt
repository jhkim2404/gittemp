5. 깃허브로 협업하기

  5.1. 여러 컴퓨터에서 원격 저장소 함께 사용하기

    1. 원격 저장소 복제하기 - git clone
      -. 원격 저장소를 기존에 연결된 지역 저장소 외에 지역 저장소에서 사용하려면 원격 저장소에 담긴 내용 전체를 지역 저장소로 
        가져와야 합니다. 원격 저장소를 지역 저장소로 똑같이 자겨오는 것을 '복제한다'고 하거나 '클론(clone)' 또는 '클로닝(cloning)'이라고 합니다.
        : 예시
         $ git clone git@github.com:jhkim2404/gittemp.git git_clone
         Cloning into 'git_clone'...
         remote: Enumerating objects: 53, done.
         remote: Counting objects: 100% (53/53), done.
         remote: Compressing objects: 100% (35/35), done.
         remote: Total 53 (delta 20), reused 44 (delta 14), pack-reused 0
         Receiving objects: 100% (53/53), 23.03 KiB | 7.68 MiB/s, done.
         Resolving deltas: 100% (20/20), done.
      -. git_clone 과 git_clone_office 폴더를 각가 복제하여 디렉토리 생성, 하위 파일을 가져왔는지 확인합니다.
      -. 이렇게 원격 저장소를 복제하면 자동으로 지역 저장소와 원격 저장소가 연결됩니다.
         git_clone 과 git_clone_office 디렉토리에서 git remote -v 명령을 사용하면 연결이 되어 있는지 확인할 수 있습니다.
        : 예시
          $ git remote -v
          origin  git@github.com:jhkim2404/gittemp.git (fetch)
          origin  git@github.com:jhkim2404/gittemp.git (push)

    2. 개인 컴퓨터에서 작업하고 올리기
      -. gittemp 디렉토리에서 작업후 저장소에 git commit > git push 명령 사용해 원격저장소에 올립니다.
         : 예시
            $ git add github_use.txt
            $ git commit -m " git clone add "
            $ git push

    3. 회사 컴퓨터에서 내려받아 작업하기
      -. 개인 컴퓨터에서 커밋을 푸시했기 때문에 회사 컴퓨터에서 원격 저장소를 복제했을 때와 원격저장소의 커밋 상황이 달라졌습니다.
      -. 따라서, 회사 컴퓨터에서 작업하려면 먼저 원격 저장소에 새로 올라온 커밋을 가져와야 합니다.
      -. git_clone_office 디렉토리로 이동하여 git pull 명령을 입력하면 앞에서 원격 저장소에 새로 올라온 커밋을 가져옵니다.
        : 예시
          jhkim@DESKTOP-HVM9KTK MINGW64 /c/gittemp (main)
          $ cd /c/git_clone_office/

          jhkim@DESKTOP-HVM9KTK MINGW64 /c/git_clone_office (main)
          $ git pull
          remote: Enumerating objects: 7, done.
          remote: Counting objects: 100% (7/7), done.
          remote: Compressing objects: 100% (4/4), done.
          Unpacking objects: 100% (6/6), 1.62 KiB | 103.00 KiB/s, done.
          remote: Total 6 (delta 3), reused 5 (delta 2), pack-reused 0
          From github.com:jhkim2404/gittemp
             9efa296..9294814  main       -> origin/main
          Updating 9efa296..9294814
          Fast-forward
           github_use.txt | 52 ++++++++++++++++++++++++++++++++++++++++++++++++++++
           1 file changed, 52 insertions(+)
           create mode 100644 github_use.txt


  5.2. 원격 브랜치 정보 가져오기
    
    -. git pull 명령은 원격 저장소의 최신 커밋을 지역 저장소에 합쳐줍니다. 
    -. 하지만 최신 커밋을 합치기 전에 원격 저장소에 어떤 변화가 있는지 먼저 살펴봐야 합니다.
    -. 이럴 때는 원격 브랜치에서 정보만 먼저 가져올 수 있습니다. 

    1. 원격 master 브랜치
      -. 지역 저장소의 master 브랜치처럼 원격 저장소도 만들 때 기본으로 master 브랜치가 생성됩니다.
      -. git_clone 디렉토리로 이동하여 git log --oneline 명령을 이용하여 git log를 확인한다.
        : 예시

          jhkim@DESKTOP-HVM9KTK MINGW64 /c/git_clone (main)
          $ git log --oneline
          da0daef (HEAD -> main, origin/main, origin/HEAD) Merge branch 'main' of github.com:jhkim2404/gittemp
          aa80426 finished
          76d57b3 office add
          9294814  git clone add
          29ad03a  git clone add
          9efa296 github info update
          47efe74  gethub ssh connect mothod add
          6abd01a github push test
          ca1acac Update git_github_info.txt
          975bce6 git pull test
          e24d8d1 Merge branch 'main' of https://github.com/jhkim2404/gittemp
          1c05e9d test commit
          38e9bdb  github add
          b3a719a Create README.md
          3eee24e github info txt add
          0bf376d test commited
          614c5e6  git submodule add path filename
          953f049 git branch info txt update
          dd23586 jhkim doc update
          ea7d983 jhkim git revert test
          0b75f01 Revert "jhkim 2022-07-02 13:27 update"
          e2615bd jhkim git reset hash
          5f2950e jhkim 2022-07-02 13:27 update
          474e03e jhkim 2022-07-02 doc create
      -. (HEAD -> main, origin/main, origin/HEAD) 표시가 되어 있습니다.
         여기에서 HEAD -> main는 이 커밋이 지역 저장소의 최종 커밋이라는 뜻이고, 
         origin/main는 원격 저장소의 최종 커밋이라는 뜻입니다.
      -. 아직 git_clone 디렉토리가 원격 저장소를 복제한 상태 그대로이기 때문에 지역 저장소와 원격 저장소 모두의 최종 커밋이 같습니다.
      -. git_clione 디렉토리에 새로운 커밋을 만들어 보겠습니다.

    2. 원격 브랜치 정보 가져오기 - git fetch

  5.3. 협업의 기본 알아보기

    1. 공동 작업자 추가하기
    2. 작업 환경 구성하기
    3. 원격 저장소에 첫 커밋 푸시하기
    4. 공동 작업자 컴퓨터 원격 저장소 복제하기
    5. 첫 번째 커밋이 아니라면 풀 먼저하기

  5.4. 협업에서 브랜치 사용하기
    
    1. 새로 만든 브랜치 푸시하기
    2. 풀 리퀘스트로 푸시한 브랜치 병합하기
   
