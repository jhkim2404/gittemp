4. 깃허브로 백업하기

  4.1 원격 저장소와 깃허브

    1. 원격저장소란?
    2. 깃허브로 할 수 있는 일들
      -. 원격 저장소에서 깃을 사용할 수 있습니다.
      -. 지역 저장소를 백업할 수 있습니다.
      -. 자신의 개발 이력을 남길 수 있습니다.
      -. 다른 사람의 소소를 살펴볼 수 있고, 오픈 소스에 참여할 수도 있습니다.

  4.2 깃허브 시작하기

    깃허브에 원격 저장소를 만들기 위해서는 먼저 깃허브에 가입해야 합니다. 깃허브에 가입하고 저장소를 만드는 방법을 알아보겠습니다.
   저장소는 필요할 때마다 얼마든지 만들 수 있고, 사용하지 않는 저장소는 삭제할 수 있습니다.

    1. 깃허브에 가입하기
    2. 깃허브에 원격 저장소 만들기
  
  4.3 지역 저장소를 원격 저장소에 연결하기

    원격 저장소를 만들었으니 이제 지역 저장소에서 한 작업을 원격 저장소로 올리거나 원격 저장소에 있는 파일을 지역
    저장소에 있는 파일을 지역 저장소로 내려받아 작업해 보겠습니다. 이를 위해서는 먼저 지역 저장소와 원격 저장소를 연결해야 합니다.

    1. 지역 저장소 만들기
      -. local-git을 줄인 loc-git 이라는 새 디렉토리를 만들고 지역 저장소로 초기화하겠습니다.
        : git init loc-git
        : cd loc-git
        : vi fi.txt 
        : git add fi.txt
        : git commit -m "add a"
        : git log

    2. 원격 저장소에 연결하기
      -. 사용자 컴퓨터에 잇는 지역 저장소를 깃허브에 있는 원격 저장소와 연결해 보겠습니다. 깃허브 저장소 화면에서 알려준
        여러 가지 접속 방법 중 '커맨드 라인에서 기존 저장소를 푸시하기' 방법을 사용해서 지역 저장소에 있는 파일을 원격 저장소에
        있는 파일을 원격 저장소로 올려 보겠습니다.
        : git remote add origin https://github.com/jhkim2404/gittemp.git
        : git branch -M main
        : git push -u origin main
      -. 원격 저장소(remote)에 제대로 연결됐는지 확인해 보겠습니다.
         다음과 같이 git remote 명령에 -v 옵션을 붙여서 입력해 보겠습니다.
        : 예시
          $ git remote -v
          origin  https://github.com/jhkim2404/gittemp.git (fetch)
          origin  https://github.com/jhkim2404/gittemp.git (push)

  4.4 원격 저장소에 올리기 및 내려받기

    1. 원격 저장소에 파일 올리기 - git push
      -. 먼저 지역 저장소의 커밋을 원격 저장소로 보내는 푸시를 알아보겠습니다. 원격 저장소에 처음 접속할 때 나타나는 
        내용 중 두번째 항목이 바로 푸시하라는 명령입니다. 직접 사용해 보겠습니다.
      -. 터미널 창에서 다음과 같이 입력하세요. 지역 저장소의 브랜치를 origin, 즉 원격 저장소의 master 브랜치로 푸시하라는 명령입니다.
        여기에서 '-u' 옵션은 지역 저장소의 브랜치를 원격 저장소의 master 브랜치에 연결하기 위한 것으로 처음에 한 번만 사용하면 됩니다.
        : 예시
         $ git push -u origin master
         error: src refspec master does not match any
         error: failed to push some refs to 'https://github.com/jhkim2404/gittemp.git'
      -. error: src refspec master does not match any 에러 발생의 원인 push 명령어 뒤에 master 브랜치를 추가 해서이다.
         저장소는 origin이 맞지만 브랜치는 없기 때문이다. 
        : 예시 
         $ git push -u origin
         Enumerating objects: 12, done.
         Counting objects: 100% (12/12), done.
         Delta compression using up to 12 threads
         Compressing objects: 100% (10/10), done.
         Writing objects: 100% (10/10), 1.94 KiB | 991.00 KiB/s, done.
         Total 10 (delta 5), reused 0 (delta 0), pack-reused 0
         remote: Resolving deltas: 100% (5/5), completed with 1 local object.
         To https://github.com/jhkim2404/gittemp.git
            b3a719a..e24d8d1  main -> main
         branch 'main' set up to track 'origin/main'.

    2. 깃허브 사이트에서 직접 커밋하기

    3. 원격 저장소에서 파일 내려받기 - git pull
      -. 원격 저장소에 있는 소스 파일을 다른 사용자가 수정했거나 깃허브 사이트에서 직접 커밋하면 지역 저장소와 차이가 생깁니다.
        이럴 때는 원격 저장소와 지역 저장소의 상태를 같게 만들기 위해 원격 저장소의 소소를 지역 저장소로 가져옵니다.
        이것을 'PULL 한다' 라고 합니다.
      -. 다은 명령은 origin(원격 저장소)의 내용을 master 브랜치로 가져온다는 뜻입니다.
        : git pull origin master

  4.5 깃허브에 SSH 원격 접속하기
